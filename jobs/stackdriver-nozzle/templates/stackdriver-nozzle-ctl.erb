#!/bin/bash -e

RUN_DIR=/var/vcap/sys/run/stackdriver-nozzle
LOG_DIR=/var/vcap/sys/log/stackdriver-nozzle
JOB_DIR=/var/vcap/jobs/stackdriver-nozzle
PKG_DIR=/var/vcap/packages/stackdriver-nozzle
PIDFILE=${RUN_DIR}/stackdriver-nozzle.pid

source /var/vcap/packages/common/utils.sh

case $1 in

  start)

    pid_guard ${PIDFILE} stackdriver-nozzle

    mkdir -p ${RUN_DIR}
    chown -R vcap:vcap ${RUN_DIR}
    chown -R vcap:vcap .

    mkdir -p ${LOG_DIR}
    chown -R vcap:vcap ${LOG_DIR}

    export RLP_ADDRESS_COLON_PORT=<%= link('reverse_log_proxy').address %>:<%= link('reverse_log_proxy').p('egress.port', 8082) %>
    export RLP_CA_CERT_FILE=${JOB_DIR}/config/cacert.pem
    export RLP_CERT_FILE=${JOB_DIR}/config/cert.pem
    export RLP_KEY_FILE=${JOB_DIR}/config/cert.key
    export RLP_SHARD_ID=<%= spec.deployment %>
    export RLP_DETERMINISTIC_NAME=<%= spec.id %>

    export FIREHOSE_ENDPOINT=<%= p('firehose.endpoint') %>
    export FIREHOSE_USERNAME=<%= p('firehose.username') %>
    export FIREHOSE_PASSWORD=<%= p('firehose.password') %>
    export FIREHOSE_EVENTS_TO_STACKDRIVER_LOGGING=<%= p('firehose.events_to_stackdriver_logging', 'LogMessage,Error') %>
    export FIREHOSE_EVENTS_TO_STACKDRIVER_MONITORING=<%= p('firehose.events_to_stackdriver_monitoring', '') %>
    export FIREHOSE_SKIP_SSL=<%= p('firehose.skip_ssl', false) %>
    export FIREHOSE_SUBSCRIPTION_ID=<%= p('firehose.subscription_id', 'stackdriver-nozzle') %>
    export FIREHOSE_NEWLINE_TOKEN=<%= p('firehose.newline_token', '') %>

    export DEBUG_NOZZLE=<%= p('nozzle.debug', 'false') %>
    export RESOLVE_APP_METADATA=<%= p('nozzle.resolve_app_metadata', 'true') %>
    export METRICS_BUFFER_DURATION=<%= p('nozzle.metrics_buffer_duration', '30') %>
    export METRICS_BATCH_SIZE=<%= p('nozzle.metrics_batch_size', '200') %>
    export METRIC_PATH_PREFIX=<%= p('nozzle.metric_path_prefix', 'firehose') %>
    export FOUNDATION_NAME=<%= p('nozzle.foundation_name', 'cf') %>
    export LOGGING_BATCH_COUNT=<%= p('nozzle.logging_batch_count', '1000') %>
    export LOGGING_BATCH_DURATION=<%= p('nozzle.logging_batch_duration', '30') %>
    export LOGGING_REQUESTS_IN_FLIGHT=<%= p('nozzle.logging_requests_in_flight', '16') %>
    export ENABLE_CUMULATIVE_COUNTERS=<%= p('nozzle.enable_cumulative_counters', 'true') %>
    export ENABLE_APP_HTTP_METRICS=<%= p('nozzle.enable_app_http_metrics', 'false') %>

    <% if_p('gcp.project_id') do |prop| %>
    export GCP_PROJECT_ID=<%= prop %>
    <% end %>
    <% if_p('credentials.application_default_credentials') do |prop| %>
    export GOOGLE_APPLICATION_CREDENTIALS=${JOB_DIR}/config/application_default_credentials.json
    <% end %>
    <% if_p('nozzle.event_filters.blacklist', 'nozzle.event_filters.whitelist') do |_,_| %>
    export EVENT_FILTER_FILE=${JOB_DIR}/config/event_filters.json
    <% end %>

    echo $$ > ${PIDFILE}

    exec chpst -u vcap:vcap ${PKG_DIR}/bin/stackdriver-nozzle \
      >>${LOG_DIR}/stackdriver-nozzle.stdout.log \
      2>>${LOG_DIR}/stackdriver-nozzle.stderr.log

    ;;

  stop)

    kill_and_wait ${PIDFILE}

    ;;

  *)

    echo "Usage: stackdriver-nozzle-ctl {start|stop}"

    ;;

esac
